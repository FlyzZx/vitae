.heroSection {
  background: linear-gradient(135deg, 
    var(--bg-primary) 0%,
    color-mix(in srgb, var(--primary) 8%, transparent) 25%,
    color-mix(in srgb, var(--primary-dark) 12%, transparent) 50%,
    color-mix(in srgb, var(--primary) 6%, transparent) 75%,
    var(--bg-primary) 100%);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 30%, color-mix(in srgb, var(--primary) 10%, transparent) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, color-mix(in srgb, var(--accent) 8%, transparent) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, color-mix(in srgb, var(--text-muted) 4%, transparent) 0%, transparent 60%);
    pointer-events: none;
    animation: backgroundFloat 15s ease-in-out infinite;
  }

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background-image: 
      linear-gradient(45deg, transparent 48%, color-mix(in srgb, var(--primary) 2%, transparent) 49%, color-mix(in srgb, var(--primary) 2%, transparent) 51%, transparent 52%),
      linear-gradient(-45deg, transparent 48%, color-mix(in srgb, var(--primary-dark) 1.5%, transparent) 49%, color-mix(in srgb, var(--primary-dark) 1.5%, transparent) 51%, transparent 52%);
    background-size: 60px 60px, 40px 40px;
    pointer-events: none;
    opacity: 0.6;
  }
}

@keyframes backgroundFloat {
  0%, 100% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  50% {
    transform: translate(-10px, -15px) scale(1.05);
    opacity: 0.8;
  }
}

// Adaptation pour le dark mode
@media (prefers-color-scheme: dark) {
  .heroSection {
    background: linear-gradient(135deg, 
      var(--bg-primary) 0%,
      color-mix(in srgb, var(--primary) 12%, transparent) 25%,
      color-mix(in srgb, var(--primary-dark) 16%, transparent) 50%,
      color-mix(in srgb, var(--primary) 10%, transparent) 75%,
      var(--bg-primary) 100%);

    &::before {
      background: 
        radial-gradient(circle at 20% 30%, color-mix(in srgb, var(--primary) 15%, transparent) 0%, transparent 50%),
        radial-gradient(circle at 80% 70%, color-mix(in srgb, var(--accent) 12%, transparent) 0%, transparent 50%),
        radial-gradient(circle at 50% 50%, color-mix(in srgb, var(--text-muted) 6%, transparent) 0%, transparent 60%);
    }
  }
}

// Style pour la colonne d'illustration avec débordement léger
.illustrationColumn {
  // Sur mobile, alignement centré sans débordement
  @media (max-width: 767px) {
    padding: 0;
    margin: 0;
  }
  
  // Sur tablette, débordement léger
  @media (min-width: 768px) and (max-width: 1023px) {
    margin-right: -4%;
  }
  
  // Sur desktop, on permet un léger débordement vers la droite
  @media (min-width: 1024px) {
    // On étend légèrement vers la droite sans affecter la grille
    padding-right: 0;
    margin-right: -8%;
    z-index: 10;
  }
  
  @media (min-width: 1280px) {
    margin-right: -12%;
  }
  
  @media (min-width: 1536px) {
    margin-right: -15%;
  }
}

// Effet code matrix en arrière-plan
.heroSection {
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background-image: 
      linear-gradient(45deg, transparent 48%, color-mix(in srgb, var(--primary) 1%, transparent) 49%, color-mix(in srgb, var(--primary) 1%, transparent) 51%, transparent 52%),
      linear-gradient(-45deg, transparent 48%, color-mix(in srgb, var(--primary-dark) 0.8%, transparent) 49%, color-mix(in srgb, var(--primary-dark) 0.8%, transparent) 51%, transparent 52%);
    background-size: 60px 60px, 40px 40px;
    pointer-events: none;
    opacity: 0.4;
    animation: matrixFlow 20s linear infinite;
  }
}

@keyframes matrixFlow {
  0% {
    background-position: 0 0, 0 0;
  }
  100% {
    background-position: 60px 60px, -40px 40px;
  }
}

// Amélioration de l'illustration avec effet dev
.illustrationColumn {
  // Effet de "scan lines" subtil
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      color-mix(in srgb, var(--primary) 2%, transparent) 2px,
      color-mix(in srgb, var(--primary) 2%, transparent) 4px
    );
    pointer-events: none;
    opacity: 0.6;
    animation: scanLines 8s ease-in-out infinite;
    z-index: 1;
  }
}

@keyframes scanLines {
  0%, 100% {
    opacity: 0.3;
    transform: translateY(0);
  }
  50% {
    opacity: 0.6;
    transform: translateY(-5px);
  }
}

// Optimisations responsive pour l'expérience développeur
@media (max-width: 1023px) {
  .heroSection {
    // Réduction des effets sur tablette/mobile pour les performances
    &::after {
      opacity: 0.3;
      animation-duration: 30s;
    }
  }
  
  .illustrationColumn {
    // Réduction des effets scan lines sur mobile
    &::before {
      opacity: 0.3;
      animation-duration: 12s;
    }
  }
}

@media (max-width: 767px) {
  .heroSection {
    // Effets minimalistes sur mobile
    padding-top: 2rem;
    padding-bottom: 2rem;
    
    &::after {
      opacity: 0.2;
      animation: none;
    }
  }
  
  .illustrationColumn {
    &::before {
      display: none; // Pas de scan lines sur mobile
    }
  }
}

:global([data-theme="dark"]) .heroSection {
  background: linear-gradient(135deg, 
    var(--bg-primary) 0%,
    color-mix(in srgb, var(--primary) 12%, transparent) 25%,
    color-mix(in srgb, var(--primary-dark) 16%, transparent) 50%,
    color-mix(in srgb, var(--primary) 10%, transparent) 75%,
    var(--bg-primary) 100%);

  &::before {
    background: 
      radial-gradient(circle at 20% 30%, color-mix(in srgb, var(--primary) 15%, transparent) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, color-mix(in srgb, var(--accent) 12%, transparent) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, color-mix(in srgb, var(--text-muted) 6%, transparent) 0%, transparent 60%);
  }
}

// Boutons du Hero avec meilleure visibilité
.primaryButton {
  background: linear-gradient(135deg, var(--primary), var(--primary-dark));
  color: white;
  box-shadow: 
    0 8px 24px color-mix(in srgb, var(--primary) 25%, transparent),
    0 4px 12px color-mix(in srgb, var(--primary) 15%, transparent);
  
  &:hover {
    box-shadow: 
      0 12px 32px color-mix(in srgb, var(--primary) 35%, transparent),
      0 6px 16px color-mix(in srgb, var(--primary) 25%, transparent);
  }
}

.secondaryButton {
  border: 2px solid var(--primary);
  color: var(--primary);
  background: color-mix(in srgb, var(--primary) 5%, transparent);
  box-shadow: 
    0 4px 16px color-mix(in srgb, var(--primary) 10%, transparent),
    inset 0 0 0 1px color-mix(in srgb, var(--primary) 10%, transparent);
  
  &:hover {
    background: color-mix(in srgb, var(--primary) 10%, transparent);
    border-color: var(--primary-light);
    box-shadow: 
      0 8px 24px color-mix(in srgb, var(--primary) 20%, transparent),
      inset 0 0 0 1px color-mix(in srgb, var(--primary) 20%, transparent);
  }
}

@media (prefers-color-scheme: dark) {
  .secondaryButton {
    background: color-mix(in srgb, var(--primary) 8%, transparent);
    
    &:hover {
      background: color-mix(in srgb, var(--primary) 15%, transparent);
    }
  }
}

:global([data-theme="dark"]) .secondaryButton {
  background: color-mix(in srgb, var(--primary) 8%, transparent);
  
  &:hover {
    background: color-mix(in srgb, var(--primary) 15%, transparent);
  }
}